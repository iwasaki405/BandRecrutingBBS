<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="band.portfolio.repository.ReplyMapper">

	<!-- マッピング定義（募集側） -->
	<resultMap type="band.portfolio.domain.band.model.Recruiting"
		id="recruiting">
		<id column="id" property="recruitingId" />
		<result column="user_id" property="userId" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="is_deleted" property="isDeleted" />
		<result column="create_date_time" property="createDateTime" />
		<result column="update_date_time" property="updateDateTime" />
		<collection property="replyList" resultMap="reply"
			columnPrefix="reply_" />
	</resultMap>

	<!-- マッピング定義（返信側） -->
	<resultMap type="band.portfolio.domain.band.model.Reply"
		id="reply">
		<id column="id" property="replyId" />
		<result column="user_id" property="userId" />
		<result column="recruiting_id" property="recruitingId" />
		<result column="content" property="content" />
		<result column="is_deleted" property="isDeleted" />
		<result column="create_date_time" property="createDateTime" />
		<result column="update_date_time" property="updateDateTime" />
		<association property="recruiting" resultMap="recruiting"
			columnPrefix="rec_" />
	</resultMap>


	<!-- (MyPage)返信一覧取得 -->
	<select id="findReplyMyList" resultMap="reply">
		select
			band_recruiting.id
			as rec_id,
			band_recruiting.title as rec_title,
			band_reply.id,
			band_reply.content,
			band_reply.update_date_time
		from
			band_reply
		left join
			band_recruiting
		on band_reply.recruiting_id = band_recruiting.id
		where
			band_reply.is_deleted = 0
		and
			band_recruiting.is_deleted = 0
		and
			band_reply.user_id = #{userId}
		order by
			band_reply.update_date_time
		desc
	</select>

	<!-- 返信投稿 -->
	<insert id="insertReply">
		insert into band_reply(
			user_id,
			recruiting_id,
			content,
			is_deleted
		)
		values(
			#{userId},
			#{recruitingId},
			#{content},
			0
		);
	</insert>

	<!-- 返信修正 -->
	<update id="modifyReply">
		update
			band_reply
		set
			content = #{content}
		where
			id = #{replyId}
	</update>

	<!-- 返信削除 -->
	<update id="deleteReply">
		update
			band_reply
		set
			is_deleted = 1
		where
			id = #{replyId}
	</update>

</mapper>